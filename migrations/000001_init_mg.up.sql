
-- migrate -path ./migrations -database "postgresql://postgres:postgres@localhost:6543/postgres?sslmode=disable" -verbose up

CREATE TABLE IF NOT EXISTS users (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username varchar(255) unique not null,
    password_hash varchar(255) not null,
    role varchar(20) not null,
    created_at timestamptz,
    updated_at timestamptz
);

CREATE TABLE IF NOT EXISTS students (
    user_id int UNIQUE NOT NULL,
    name varchar(255) not null,
    surname varchar(255) not null,
    CONSTRAINT fk_user
        FOREIGN KEY(user_id)
            REFERENCES users(id)
            ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS teachers (
    user_id int UNIQUE NOT NULL,
    name varchar(255) not null,
    surname varchar(255) not null,
    CONSTRAINT fk_user
        FOREIGN KEY(user_id)
            REFERENCES users(id)
            ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS lessons (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(255)
);

CREATE TABLE IF NOT EXISTS student_lesson (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    student_id int references students(user_id) on delete cascade,
    lesson_id int references lessons(id) on delete cascade,
    CONSTRAINT uq_student_lesson_student_lesson UNIQUE (student_id, lesson_id)
);

CREATE TABLE IF NOT EXISTS marks (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    teacher_id int references teachers(user_id) on delete cascade,
    student_id int references students(user_id) on delete cascade,
    lesson_id int references lessons(id) on delete cascade,
    home_work_grade int not null check (home_work_grade >= 1 or home_work_grade < 6 ),
    attendance_grade int not null check (attendance_grade = 0 or attendance_grade = 1),
    date date not null,
    CONSTRAINT fk_student_lesson
        FOREIGN KEY (student_id, lesson_id)
        REFERENCES student_lesson(student_id, lesson_id)
);

CREATE INDEX idx_user_role ON users(role);
CREATE INDEX idx_student_id ON students(user_id);
CREATE INDEX idx_teacher_id ON teachers(user_id);
CREATE INDEX idx_student_lesson_student_id ON student_lesson(student_id);
CREATE INDEX idx_student_lesson_lesson_id ON student_lesson(lesson_id);
CREATE INDEX idx_mark_teacher_id ON marks(teacher_id);
CREATE INDEX idx_mark_student_id ON marks(student_id);
CREATE INDEX idx_mark_lesson_id ON marks(lesson_id);
CREATE INDEX idx_users_username ON users(username);